// Generated by CoffeeScript 1.7.1
var Consultant, SeniorConsultant, anObject, georg, key, mirco, myArray, myObject, number, really, shouldI, square, value,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

number = 42;

console.log('this is the string');

square = function(x) {
  return x * x;
};

myArray = [1, 2, 3, 4, 5];

myObject = {
  a: 'test',
  b: 'another',
  c: 'something',
  parent: {
    key: 'value',
    anotherKey: 'anotherValue'
  }
};

shouldI = false;

if (shouldI != null) {
  console.log('awesome');
}

really = true;

if (shouldI && really) {
  console.log('some text');
}

anObject = {
  first: 'first text',
  second: 'second text',
  third: 'third text',
  fourth: 'fourth text'
};

for (key in anObject) {
  value = anObject[key];
  console.log("the " + key + " item has the text '" + value + "'");
}

Consultant = (function() {
  function Consultant(name) {
    this.name = name;
  }

  Consultant.prototype.present = function(topic) {
    return console.log(this.name + (" says a lot bla bla bla about " + topic));
  };

  return Consultant;

})();

SeniorConsultant = (function(_super) {
  __extends(SeniorConsultant, _super);

  function SeniorConsultant() {
    return SeniorConsultant.__super__.constructor.apply(this, arguments);
  }

  SeniorConsultant.prototype.present = function() {
    return SeniorConsultant.__super__.present.call(this, 'Business Development and Global Marketing Management');
  };

  return SeniorConsultant;

})(Consultant);

mirco = new Consultant('Mirco');

georg = new SeniorConsultant('Georg');

mirco.present('javascript');

georg.present();
